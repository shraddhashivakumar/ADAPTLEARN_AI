
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String           @id @default(cuid())
  email         String           @unique
  name          String
  learningStyle String
  knowledgeLevel Int             @default(0)
  createdAt     DateTime         @default(now())
  assessments   Assessment[]
  progress      UserProgress[]
  chatSessions  ChatSession[]
  achievements  Achievement[]
}

model Assessment {
  id          String    @id @default(cuid())
  userId      String
  subject     String
  score       Float
  questions   Json
  answers     Json
  completedAt DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
}

model Lesson {
  id            String         @id @default(cuid())
  subject       String
  topic         String
  difficulty    Int
  content       Json
  type          String
  prerequisites String[]
  userProgress  UserProgress[]
}

model UserProgress {
  id            String   @id @default(cuid())
  userId        String
  lessonId      String
  completionRate Float   @default(0.0)
  timeSpent     Int      @default(0)
  lastAccessed  DateTime @default(now())
  user          User     @relation(fields: [userId], references: [id])
  lesson        Lesson   @relation(fields: [lessonId], references: [id])
}

model ChatSession {
  id        String   @id @default(cuid())
  userId    String
  messages  Json
  context   Json
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Achievement {
  id          String   @id @default(cuid())
  userId      String
  badgeType   String
  title       String
  description String
  earnedAt    DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
}
